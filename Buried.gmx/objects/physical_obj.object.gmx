<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>grounded = false;
blocked = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collisions with a ground obj.
//Check for landing collision. Determines whether the player is grounded (This condition will be useful later.)
if !place_meeting(x, y + 1,ground_obj)
   {
   grounded = false;
   }
else
   {
   move_outside_solid(direction-180,1000);
   grounded = true;
   }
   

//Check if the player is blocked. 0 - unblocked, 1 - blocked left, 2 - blocked right, 3 - blocked upward.
if !(place_meeting(x+1, y,ground_obj) or place_meeting(x-1,y,ground_obj or place_meeting(x,y-1,ground_obj)))
   {
   blocked = 0;
   }
if (place_meeting(x+1, y,ground_obj)){
   move_outside_solid(direction-180,1000);
   blocked = 2;
   }
if (place_meeting(x-1, y,ground_obj)){
     move_outside_solid(direction-180,1000);
   blocked = 1;
}
if (place_meeting(x, y-1,ground_obj)){
   move_outside_solid(direction-180,1000);
   blocked = 3;
   }

//Adjust speed appropriately.
if (grounded and vspeed &gt;0){
   vspeed = 0;
}
if (blocked = 1 and hspeed&lt;0){
   hspeed = 0;
}
if (blocked = 2 and hspeed&gt;0){
   hspeed = 0;
}
if (blocked = 3 and vspeed&lt;0){
   vspeed = 0;
}

//For Testing (Player changes color when in contact with a surface).
if (grounded or blocked &gt;0){
   image_index =1
}else{
      image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Gravity
if(!grounded) vspeed+= .1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
