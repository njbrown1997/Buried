<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>player_filler_sprt</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = .1;

//Speed Variables
xspeed = 9;
yspeed = 9;
downspeed = 10;
updiagspeed = 10;
downdiagspeed = 1;
groundspeed = 6;

//Acceleration &amp; Gravity Variables
gravacceleration = 1;
horacceleration = 1;
dashacceleration = gravacceleration;
upacceleration = 1;

//Advanced Movement Variables
dashdistance = 150;
dashcooldown = false;

//Movement Visual Effects Variables
propellereffect = true;
propellerid = 0;

//Player Stats Variables
playerstamina = 200
staminacost = 0;





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cooldown

dashcooldown = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Basic Movement

//Diagonal Movement 
if keyboard_check(ord('S')) &amp;&amp; keyboard_check(ord('D')){
    x += downdiagspeed;
    y += downdiagspeed;
    staminacost += 2;
    propellerid = 5;
}

else if keyboard_check(ord('S')) &amp;&amp; keyboard_check(ord('A')){
    x -= downdiagspeed;
    y += downdiagspeed;
    staminacost += 2;
    propellerid = 7;
}

if keyboard_check(ord('W')) &amp;&amp; keyboard_check(ord('D')){
    x += updiagspeed;
    y -= updiagspeed;
    staminacost += 4;
    propellerid = 8;
}

else if keyboard_check(ord('W')) &amp;&amp; keyboard_check(ord('A')){
    x -= updiagspeed;
    y -= updiagspeed;
    staminacost += 4;
    propellerid = 6;
}
//Axis Movement
else{

    if keyboard_check(ord('A')){
        x += -xspeed;
        staminacost += 2;
        propellerid = 4;
        
    }
    else if keyboard_check(ord('D')){
        x += xspeed;
        staminacost += 2;
        propellerid = 3;
    }
    
    else if keyboard_check(ord('W')){
        y -= yspeed;
        staminacost += 4;
        propellereffect = true;
        propellerid = 2;
    }
    else if keyboard_check(ord('S')){
        y += downspeed;
        staminacost += 2;
        propellerid = 1;
    }
    
    if keyboard_check(vk_nokey){
        speed = 0;
        staminacost -= 2;
        propellerid = 0;

    }

}








</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Gravity &amp; Acceleration

//downward accelerative force
if keyboard_check(vk_nokey){
    gravacceleration += .1;
    upacceleration -= .2;
}

y += gravacceleration;

//gravity limiter

if gravacceleration &gt; 10{
    gravacceleration = 10
}

//player's upward force

if keyboard_check(ord('W')) &amp;&amp; gravacceleration &gt; 1{
    upacceleration += .3
}

y -= upacceleration;

//player's upward force limiter

if updiagspeed &gt; 10{
    updiagspeed = 10;
}

if keyboard_check(ord('W')){ 
}
else if yspeed &gt; 9{
        yspeed = 9;
}

if keyboard_check(ord('S')){
    upacceleration = 0;
}

///Trajectory adjustment

if keyboard_check_pressed(ord('A')){
    horacceleration -= .1;
    x -= horacceleration;
}
else if keyboard_check_pressed(ord('D')){
    horacceleration -= .1;
    x += horacceleration;
}
else if horacceleration &lt; 1{
    horacceleration += .1;
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Advanced Movement


//Upward dash &amp; Cooldown

if keyboard_check_released(vk_space) &amp;&amp; !keyboard_check(ord('W')) &amp;&amp; !keyboard_check(ord('A')) &amp;&amp; !keyboard_check(ord('S')) &amp;&amp; !keyboard_check(ord('D')){
    if(!dashcooldown){
        vspeed -= dashdistance;
        upacceleration = 0;
        gravacceleration = .1;
        staminacost += 8;
        dashcooldown = true;
        alarm_set(1,room_speed);
        }
}

//Float
if keyboard_check(vk_lshift){
    vspeed = 0;
    upacceleration = 0;
    gravacceleration = .1;
    staminacost += 2;   
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stamina Control

/*
if staminacost == playerstamina{
    vspeed = 0;
    upacceleration = .1;
    staminacost = 0;
}

//Stamina Limiter
if playerstamina &gt; 200{
    playerstamina = 200;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement Visual Effects


//Landing &amp; Ground Movement Effects

if place_meeting(x, y + 33, ground_obj) &amp;&amp; propellereffect{
    effect_create_above(ef_smoke, x, y + 64, 0, c_white);
    propellereffect = false;
    
    
}
else if place_meeting(x, y + 35, ground_obj){
    
    if keyboard_check(ord('D')) || keyboard_check(ord('A')){
        effect_create_above(ef_smoke, x, y + 31, 0, c_white);
        propellereffect = false;
    }
} 

//Air Thrusters Effect

if propellerid == 1{
    effect_create_above(ef_smoke, x, y - 31, 0, c_ltgray);

}
else if propellerid == 2{
    effect_create_above(ef_smoke, x, y + 31, 0, c_ltgray);

}
else if propellerid == 3{
    effect_create_above(ef_smoke, x - 31, y, 0, c_ltgray);

}
else if propellerid == 4{
    effect_create_above(ef_smoke, x + 31, y, 0, c_ltgray);

}
else if propellerid == 5{
    effect_create_above(ef_smoke, x - 31, y, 0, c_ltgray);
    effect_create_above(ef_smoke, x, y - 31, .2, c_ltgray);

}
else if propellerid == 6{
    effect_create_above(ef_smoke, x + 31, y, 0, c_ltgray);
    effect_create_above(ef_smoke, x, y + 31, 0, c_ltgray);

}
else if propellerid == 7{
    effect_create_above(ef_smoke, x + 31, y, 0, c_ltgray);
    effect_create_above(ef_smoke, x, y - 31, .2, c_ltgray);

}
else if propellerid == 8{
    effect_create_above(ef_smoke, x - 31, y, 0, c_ltgray);
    effect_create_above(ef_smoke, x, y + 31, 0, c_ltgray);

}




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="ground_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_player</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stopping and Ground Movement 

//Gravity adjustment
gravacceleration = 0;
upacceleration = 0;
speed = 0;
playerstamina += 1.5;

//Allow ground movement

if keyboard_check(ord('D')){
    x += groundspeed;
}

if keyboard_check(ord('A')){
    x -= groundspeed;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Release Bomb
instance_create(mouse_x, mouse_y, bomb_obj);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>64,64</point>
  </PhysicsShapePoints>
</object>
